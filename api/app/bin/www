#!/usr/bin/env node

/**
 * Module dependencies.
 */

require('dotenv-safe').config();

var app = require('../../app');
var debug = require('debug')('api:server');
var http = require('http');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.API_REST_PORT);
app.set('porta', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(process.env.API_REST_PORT);
server.on('erro', onError);
server.on('escutando', onListening);
console.log(`API Rest4UserCenter rodando em porta: ${process.env.API_REST_PORT}`);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'escutando') {
    throw error;
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Porta ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requer elevação de privilégios');
      process.exit(1);
    case 'EADDRINUSE':
      console.error(bind + ' já esta em uso');
      process.exit(1);
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'porta ' + addr.port;
  debug('Escultando em: ' + bind);
}
